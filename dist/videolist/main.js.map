{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/service/video.service.ts","webpack:///./src/app/video-detail/video-detail.component.css","webpack:///./src/app/video-detail/video-detail.component.html","webpack:///./src/app/video-detail/video-detail.component.ts","webpack:///./src/app/video-list/video-list.component.css","webpack:///./src/app/video-list/video-list.component.html","webpack:///./src/app/video-list/video-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, ActivatedRoute } from '@angular/router';\r\nimport { VideoListComponent } from './video-list/video-list.component';\r\nimport { VideoDetailComponent } from './video-detail/video-detail.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: '/videoList',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'videoList', component: VideoListComponent,\r\n  },\r\n  {\r\n    path: 'videoDetail/:index', component: VideoDetailComponent ,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)]\r\n  ,\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n</div>\\n\\n<router-outlet ></router-outlet>\"","import { Component } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'videolist';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HttpModule, Http } from '@angular/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { VideoListComponent } from './video-list/video-list.component';\nimport { VideoDetailComponent } from './video-detail/video-detail.component';\nimport { VideoService } from './service/video.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatVideoModule } from 'mat-video';\nimport { MatCardModule } from '@angular/material/card';\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\nimport { environment } from '../environments/environment';\n\nconst config: SocketIoConfig = { url: 'localhost:3000', options: {} };\n@NgModule({\n  declarations: [\n    AppComponent,\n    VideoListComponent,\n    VideoDetailComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpModule,\n    MatGridListModule,\n    MatVideoModule,\n    MatCardModule,\n    SocketIoModule.forRoot(config),\n  ],\n  providers: [VideoService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n","import { Router } from '@angular/router';\r\nimport { Injectable, Inject /*Inject api config*/ } from '@angular/core';\r\nimport { Http, Response, Headers, ResponseContentType, RequestOptionsArgs } from '@angular/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { Socket } from 'ngx-socket-io';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable()\r\nexport class VideoService {\r\n  static headers = new Headers({ 'Content-Type': 'application/json' });\r\n  constructor(private router: Router, private http: Http, private socket: Socket) {\r\n  }\r\n  getVideo() {\r\n    return this.http.get(environment.apiurl + '/video').pipe(map(data => data.json()));\r\n  }\r\n  getVideoDetail(id) {\r\n    return this.http.get(environment.apiurl + '/video/' + id).pipe(map(data => data.json()));\r\n  }\r\n\r\n\r\n  addView(body: any) {\r\n    return this.http.post(environment.apiurl + '/video/', body);\r\n  }\r\n  addLike(body: any) {\r\n    return this.http.post(environment.apiurl + '/video/', body);\r\n  }\r\n\r\n}\r\n","module.exports = \".example-card {\\r\\n   \\r\\n    max-width: 800px;\\r\\n    min-width: 400px;\\r\\n    display: inline-table;\\r\\n  }\\r\\n  \\r\\n  .example-header-image {\\r\\n    background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\\r\\n    background-size: cover;\\r\\n  }\"","module.exports = \"\\n \\n<div style=\\\"\\\" >\\n\\n\\n    <div *ngIf=\\\"videoDetail[0]\\\"  style=\\\"\\n    padding: 5%;\\n    width: 100%;\\n    display: flex;\\n    flex-wrap: wrap;\\n    box-sizing: border-box;\\n    justify-content: center;\\n\\\" >\\n        <mat-card class=\\\"example-card\\\">\\n            <mat-card-header>\\n             \\n              <mat-card-title>{{videoDetail[0].title}}</mat-card-title>\\n              <mat-card-subtitle>{{videoDetail[0].subtitle}}</mat-card-subtitle>\\n            </mat-card-header>\\n             <mat-video src=\\\"{{videoDetail[0].sources[0]}}\\\"  [autoplay]=\\\"true\\\" [preload]=\\\"true\\\" [fullscreen]=\\\"true\\\" [download]=\\\"false\\\" color=\\\"accent\\\" spinner=\\\"spin\\\" poster=\\\"{{videoDetail[0].thumb}}\\\"></mat-video>\\n            <mat-card-content>\\n                <span style=\\\"display: flex;align-items:center\\\">\\n                  <img src=\\\"../../assets/icon/view.png\\\" width=\\\"32px\\\" > &nbsp;&nbsp;  {{view}} \\n                  <img src=\\\"../../assets/icon/like.png\\\" width=\\\"48px\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"addLike();\\\" > {{like}} \\n                </span>\\n                \\n              <p>\\n                  {{videoDetail[0].description}}\\n              </p>\\n\\n              \\n            </mat-card-content>\\n           \\n          </mat-card>\\n      \\n     </div>\\n    \\n    \\n\\n</div>\\n  \\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { VideoService } from '../service/video.service';\nimport { Socket } from 'ngx-socket-io';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-video-detail',\n  templateUrl: './video-detail.component.html',\n  styleUrls: ['./video-detail.component.css']\n})\nexport class VideoDetailComponent implements OnInit {\n  public index: String = '';\n  public videoDetail: any = '';\n  public view: Number = 0;\n  public like: Number = 0;\n  constructor(private route: ActivatedRoute, private router: Router, private videoService: VideoService, private socket: Socket) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.index = params['index'];\n    });\n\n    this.videoService.addView({ id: this.index, scort: '1', view: '1' }).subscribe(data => {\n      this.videoService.getVideoDetail(this.index).subscribe(datas => {\n        this.videoDetail = datas;\n        this.view = datas[0].view;\n        this.like = datas[0].like;\n        console.log(this.videoDetail[0]);\n      });\n    });\n  }\n\n\n\n  addLike() {\n    this.videoService.addLike({ id: this.index, scort: '1', like: '1' }).subscribe(e => {\n      this.videoService.getVideoDetail(this.index).subscribe(data => {\n        this.like = data[0].like;\n      });\n    });\n\n  }\n\n\n}\n","module.exports = \"html {\\r\\n    font-family: 'Open Sans', Arial;\\r\\n  }\\r\\n  ul {\\r\\n\\r\\n    padding: 0 1%;\\r\\n    width: 100%;\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n    box-sizing: border-box;\\r\\n    justify-content: center;\\r\\n  }\\r\\n  ul li {\\r\\n    display: block;\\r\\n    position: relative;\\r\\n    overflow: hidden;\\r\\n    width: 340px;\\r\\n    margin: 8px 1%;\\r\\n    box-sizing: border-box;\\r\\n  }\\r\\n  ul li img {\\r\\n    width: 340px;\\r\\n  }\\r\\n  ul li span {\\r\\n    position: absolute;\\r\\n    top: 50%;\\r\\n    left: 50%;\\r\\n    background: rgba(0,0,0,0.7);\\r\\n    width: 0;\\r\\n    padding: 0;\\r\\n    text-align: center;\\r\\n    line-height: 0;\\r\\n    transition: all 0.5s ease;\\r\\n  }\\r\\n  ul li:hover span {\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width: 100%;\\r\\n    padding: 50% 0;\\r\\n  }\\r\\n  ul li h2 {\\r\\n    font-size: 14px;\\r\\n    text-transform: uppercase;\\r\\n    position: absolute;\\r\\n    top: 999px;\\r\\n    left: 0;\\r\\n    padding: 40% 2%;\\r\\n    text-align: center;\\r\\n    width: 96%;\\r\\n    transition: all 0.5s ease;\\r\\n  }\\r\\n  ul li:hover h2 {\\r\\n    top: 0;\\r\\n  }\\r\\n  ul li  {\\r\\n    cursor: pointer;\\r\\n    color: #fff;\\r\\n    text-decoration: none;\\r\\n  }\\r\\n  ul li.navigation div {\\r\\n    background: #ddd;\\r\\n    text-align: center;\\r\\n    padding: 39% 0;\\r\\n    font-size: 30px;\\r\\n  }\\r\\n  ul li.navigation .fa {\\r\\n    color: #aaa;\\r\\n    text-shadow: 1px 1px 1px #fff;\\r\\n  }\\r\\n  ul li.navigation a .fa {\\r\\n      color: #888;\\r\\n    transition: all 0.5s ease;\\r\\n  }\\r\\n  ul li.navigation a:hover .fa {\\r\\n    color: #78AB46;\\r\\n  }\"","module.exports = \"<!-- <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"2:1\\\">\\n  <mat-grid-tile *ngFor=\\\"let item of videoList; let i = index\\\"  >\\n      <figure>\\n          <img src = \\\"{{item.thumb}}\\\">\\n          <figcaption><span style=\\\"float:left\\\">{{item.title}}</span> <span style=\\\"float:right\\\"> View : {{item.view}}  Like :{{item.like}} </span></figcaption>\\n      </figure>\\n  </mat-grid-tile>\\n</mat-grid-list> -->\\n\\n\\n<div>\\n    <ul>\\n        \\n        <li *ngFor=\\\"let item of videoList; let i = index \\\" >\\n        <div [routerLink]=\\\"['/videoDetail/'+item.id]\\\" >\\n            <img src=\\\"{{item.thumb}}\\\">\\n            <span></span>\\n            <h2>\\n                {{item.title}} <br> View : {{item.view}}  Like :{{item.like}} \\n            </h2>\\n        </div>\\n            \\n   \\n        </li>\\n       \\n      </ul>\\t\\n</div>\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { VideoService } from '../service/video.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-video-list',\n  templateUrl: './video-list.component.html',\n  styleUrls: ['./video-list.component.css']\n})\nexport class VideoListComponent implements OnInit {\n\n  constructor(private videoService: VideoService, private router: Router, private route: ActivatedRoute) { }\n  public videoList: any;\n  ngOnInit() {\n    this.videoService.getVideo().subscribe(data => {\n      this.videoList = data.sort(function (obj1, obj2) {\n        // Ascending: first age less than the previous\n        return obj2.score - obj1.score;\n      });\n    });\n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  apiurl: 'http://localhost:3000',\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n","/* (ignored) */"],"sourceRoot":""}